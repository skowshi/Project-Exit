
import java.sql.Connection;
import javax.swing.JOptionPane;
import Models.DatabaseConnection;
import Models.UserModel;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Login() {
        checkAdmin();
        initComponents();
        URL iconURL = getClass().getResource("Images/AUXANO ICON 20.png");
        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        this.setLocationRelativeTo(null);
        checkAdmin();

    }
    DatabaseConnection dbConnect = new DatabaseConnection();

    public void checkAdmin() {

        String query = "select * from user_tab where role = 'ADMIN';";

        try {
            Connection con = dbConnect.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query);
            if (rs.next()) {

            } else {
                CreateAdmin frame = new CreateAdmin();
                frame.setVisible(true);
                this.dispose();

            }
        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEmailLogin = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnChangePassword = new javax.swing.JButton();
        txtPasswordlogin = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" Auxano PVT LTD.");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("LOGIN PAGE"));

        txtEmailLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailLoginKeyPressed(evt);
            }
        });

        jLabel1.setText("Email:");

        jLabel2.setText("Password:");

        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLogin.setText("LOG IN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnChangePassword.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnChangePassword.setText("CHANGE PASSWORD");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        txtPasswordlogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordloginKeyPressed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 102, 255));
        jLabel5.setText("Forgot Password?");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AUXANO-Logo3.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(btnLogin))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnChangePassword)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmailLogin)
                                    .addComponent(txtPasswordlogin, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPasswordlogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnChangePassword))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String Email = txtEmailLogin.getText();
        String Password = txtPasswordlogin.getText();

        String query = "select userID, role, userName from user_tab where email=? and password=?";
        if (txtEmailLogin.getText().equals("") || txtPasswordlogin.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Fill in the blank fields");
        } else if (!(txtEmailLogin.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"))) {
            JOptionPane.showMessageDialog(null, "Email format is not valid!");
        } else {
            try {
                PreparedStatement pst;
                ResultSet rs;
                try (Connection con = dbConnect.getConnection()) {
                    pst = con.prepareStatement(query);
                    pst.setString(1, Email);
                    pst.setString(2, Password);
                    rs = pst.executeQuery();
                    if (rs.next()) {

                        UserModel.loginName = rs.getString("userName");
                        UserModel.userRole = rs.getString("role");
                        UserModel.UserID = rs.getInt("userID");

                        if (UserModel.userRole.equals("ADMIN")) {
                            CreateAccount frame = new CreateAccount();
                            frame.setVisible(true);
                            this.dispose();
                        }
                        if (UserModel.userRole.equals("STOCK CONTROLLER")) {
                            Stock frame = new Stock();
                            frame.setVisible(true);
                            this.dispose();
                        }
                        if (UserModel.userRole.equals("SALES MANAGER")) {
                            Sales frame = new Sales();
                            frame.setVisible(true);
                            this.dispose();
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "User email and password does not match!");
                    }
                }
                pst.close();
                rs.close();

            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, "Check your internet connection!");
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        confirm frame = new confirm();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        confirm frame = new confirm();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void txtPasswordloginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordloginKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String Email = txtEmailLogin.getText();
            String Password = txtPasswordlogin.getText();

            String query = "select userID, role, userName from user_tab where email=? and password=?";
            if (txtEmailLogin.getText().equals("") || txtPasswordlogin.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Fill in the blank fields");
            } else if (!(txtEmailLogin.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"))) {
                JOptionPane.showMessageDialog(null, "Email format is not valid!");
            } else {
                try {
                    PreparedStatement pst;
                    ResultSet rs;
                    try (Connection con = dbConnect.getConnection()) {
                        pst = con.prepareStatement(query);
                        pst.setString(1, Email);
                        pst.setString(2, Password);
                        rs = pst.executeQuery();
                        if (rs.next()) {

                            UserModel.loginName = rs.getString("userName");
                            UserModel.userRole = rs.getString("role");
                            UserModel.UserID = rs.getInt("userID");

                            if (UserModel.userRole.equals("ADMIN")) {
                                CreateAccount frame = new CreateAccount();
                                frame.setVisible(true);
                                this.dispose();
                            }
                            if (UserModel.userRole.equals("STOCK CONTROLLER")) {
                                Stock frame = new Stock();
                                frame.setVisible(true);
                                this.dispose();
                            }
                            if (UserModel.userRole.equals("SALES MANAGER")) {
                                Sales frame = new Sales();
                                frame.setVisible(true);
                                this.dispose();
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "User email and password does not match!");
                        }
                    }
                    pst.close();
                    rs.close();

                } catch (HeadlessException | SQLException e) {
                    JOptionPane.showMessageDialog(null, "Check your internet connection!");
                }
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txtEmailLogin.requestFocus();
        }
    }//GEN-LAST:event_txtPasswordloginKeyPressed

    private void txtEmailLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailLoginKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            txtPasswordlogin.requestFocus();
        }
    }//GEN-LAST:event_txtEmailLoginKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Login().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEmailLogin;
    private javax.swing.JPasswordField txtPasswordlogin;
    // End of variables declaration//GEN-END:variables
}
